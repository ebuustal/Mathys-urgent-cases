name: patent-watcher

on:
  schedule:
    - cron: "*/5 * * * 1-5"   # every 5 minutes, Monâ€“Fri (UTC)
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode (normal or test)"
        required: false
        default: "normal"

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: pip install requests beautifulsoup4

      - name: Run watcher
        env:
          # Django admin credentials
          DJANGO_USER: ${{ secrets.DJANGO_USER }}
          DJANGO_PASS: ${{ secrets.DJANGO_PASS }}

          # Explicit admin URLs (you can also store them as secrets;
          # leaving them inline is fine because they are public URLs)
          LOGIN_URL:  ${{ secrets.LOGIN_URL }}
          LIST_URL:   ${{ secrets.LIST_URL }}

          # Email (Gmail App Password)
          SMTP_USER:  ${{ secrets.SMTP_USER }}
          SMTP_PASS:  ${{ secrets.SMTP_PASS }}
          TO_EMAIL:   ${{ secrets.TO_EMAIL }}

          # HubSpot Private App
          HUBSPOT_TOKEN:       ${{ secrets.HUBSPOT_TOKEN }}
          HUBSPOT_OWNER_ID:    ${{ secrets.HUBSPOT_OWNER_ID }}     # 154662807
          HUBSPOT_COMPANY_ID:  ${{ secrets.HUBSPOT_COMPANY_ID }}   # 5590029115
          HUBSPOT_CONTACT_ID:  ${{ secrets.HUBSPOT_CONTACT_ID }}   # optional fallback

          # Slack workflow webhook (from Slack "Starts with a webhook")
          SLACK_WORKFLOW_URL:  ${{ secrets.SLACK_WORKFLOW_URL }}
          HUBSPOT_PORTAL_ID:   ${{ secrets.HUBSPOT_PORTAL_ID }}    # 8124475 (optional for Slack)

          MODE: ${{ github.event.inputs.mode || 'normal' }}
        run: python watcher.py

      - name: Upload fetched page (for debugging)
        if: ${{ github.event.inputs.mode != 'test' }}
        uses: actions/upload-artifact@v4
        with:
          name: last-page
          path: last_page.html

      - name: Commit updated state (if changed)
        if: ${{ github.event.inputs.mode != 'test' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -f state.json ] && [ -n "$(git status --porcelain state.json)" ]; then
            git add state.json
            git commit -m "Update state"
            git push
          else
            echo "No state changes."
          fi
